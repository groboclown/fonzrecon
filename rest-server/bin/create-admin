#!/usr/bin/env node
'use strict';

// Setup the database
require('../config/db').setup();
const roles = require('../config/access/roles');
const createOneUser = require('../controllers/user/create-user').createOneUser;

const HELP_ARGS = ['-h', '-H', '-?', '/h', '/H', '/?'];

var errors = [];
var argv = process.argv;
var reqUser = {
  role: roles.ADMIN.name,
  locale: 'en',
  organization: 'Administrators'
};

if (argv.length <= 2) {
  console.log(`Usage: ${argv[1]} -n (name list) -u (username) -e (email) -l (locale) -o (organization)`);
  process.exit(0);
}

// TODO allow for reading JSON from stdin.
for (let i = 2; i < argv.length; i += 2) {
  if (HELP_ARGS.includes(argv[i])) {
    console.log(`Usage: ${argv[1]} -n (name list) -u (username) -e (email) -l (locale) -o (organization)`);
    process.exit(0);
  }
  if (i + 1 >= argv.length || argv[i].length != 2 || argv[i][0] != '-') {
    errors.push(`Invalid argument '${argv[i]}'`);
    continue;
  }
  if (HELP_ARGS.includes(argv[i + 1])) {
    console.log(`Usage: ${argv[1]} -n (name list) -u (username) -e (email) -l (locale) -o (organization)`);
    process.exit(0);
  }
  let v = argv[i + 1].trim();
  switch (argv[i][1]) {
    case 'n':
      reqUser.names = v.split(/\s*,\s*/);
      break;
    case 'u':
      reqUser.username = v;
      break;
    case 'e':
      reqUser.email = v;
      break;
    case 'l':
      reqUser.locale = v;
      break;
    case 'o':
      reqUser.organization = v;
      break;
    default:
      errors.push(`Invalid argument ${argv[i]}`);
  }
}

if (errors.length > 0) {
  console.log('Problems found during processing:\n    ' +
    errors.join('\n    '));
  process.exit(1);
}

createOneUser(reqUser)
  .then((args) => {
    console.log(`Created admin username ${args[0].username}.  Use this token to set the password: "${args[1].resetAuthenticationToken}"`);

    // Make sure we quit, by closing off our connections.
    require('mongoose').disconnect();

    // This should exit normally, but it just hangs.  Apparently,
    // there's some open socket somewhere.
    process.exit(0);
  })
  .catch((err) => {
    console.error(err.message);
    if (err.details) {
      for (let i = 0; i < err.details.length; i++) {
        console.error(`  ${err.details[i].param}: ${err.details[i].msg}`);
      }
    } else {
      console.error(err.stack);
    }

    // Make sure we quit, by closing off our connections.
    require('mongoose').disconnect();

    // This should exit normally, but it just hangs.  Apparently,
    // there's some open socket somewhere.
    process.exit(1);
  });
